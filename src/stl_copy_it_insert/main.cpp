#include <iostream>
#include <vector>
#include <list>


using namespace std;

#define COPY

int main()
{
	int a[4] = { 10,20,30,40 };//создаём массив a[] на 4 элемента
	
	//копируем массив a[] в вектор v(указатель на начало участка который нужно скопировать,конец участка копирования)
	vector<int> v(a, a + 4);
#ifdef COPY
	list<int> L(4);	//создаём список L типа int на 4 элемента
	list<int>::iterator i;//создаём итератор i для списка L 

	//копируем вектор v в список L с помощью функции copy(<первый> ,<последний>,<операция>). copy-алгоритм,который позволяет копировать элемнты одного контейнера в другой.
	copy(v.begin(), v.end(), L.begin());
#endif // COPY

#ifdef INSERT
	list<int> L(5, 123);////создаём список L типа int на 5 элемента и заполняем его значениями 123
	list<int>::iterator i = L.begin();//создаём итератор i для списка L  и устанавливаем его в начало списка
	i++;
	i++;//передвигаем итератор на 2
	//вствляем в список L вектор v: для этого используем функцию copy,но в аргумент <операция> передаём 
	//inserter-специальный тип итератора вывода который добавляет элементы из контейнера A в контейнер B. inserter(<имя контейнера>,<итератор>) у нес итератор равен 2
	copy(v.begin(), v.end(),inserter(L,i));
	//таким образом мы встявляем вектор v в список L  между 2-ым и 3-ьим элементами списка
#endif // INSERT

	//выврод полученного списка
	for (i = L.begin(); i != L.end(); ++i)
	{
		cout << *i << ' ';
	}
	cout << endl;

	return 0;
}


